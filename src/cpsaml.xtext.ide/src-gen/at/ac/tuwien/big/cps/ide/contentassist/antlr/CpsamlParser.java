/*
 * generated by Xtext 2.22.0
 */
package at.ac.tuwien.big.cps.ide.contentassist.antlr;

import at.ac.tuwien.big.cps.ide.contentassist.antlr.internal.InternalCpsamlParser;
import at.ac.tuwien.big.cps.services.CpsamlGrammarAccess;
import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class CpsamlParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(CpsamlGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, CpsamlGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getCpsSystemAccess().getAlternatives(), "rule__CpsSystem__Alternatives");
			builder.put(grammarAccess.getTopDescSystemAccess().getAlternatives_5(), "rule__TopDescSystem__Alternatives_5");
			builder.put(grammarAccess.getInlineDescSystemAccess().getAlternatives_5(), "rule__InlineDescSystem__Alternatives_5");
			builder.put(grammarAccess.getCommandAccess().getAlternatives(), "rule__Command__Alternatives");
			builder.put(grammarAccess.getResourceAccess().getAlternatives(), "rule__Resource__Alternatives");
			builder.put(grammarAccess.getCpsAccess().getAlternatives(), "rule__Cps__Alternatives");
			builder.put(grammarAccess.getSingletonCpsAccess().getAlternatives_5(), "rule__SingletonCps__Alternatives_5");
			builder.put(grammarAccess.getMultiCpsAccess().getAlternatives_6(), "rule__MultiCps__Alternatives_6");
			builder.put(grammarAccess.getHardwareAccess().getAlternatives(), "rule__Hardware__Alternatives");
			builder.put(grammarAccess.getNameAccess().getAlternatives(), "rule__Name__Alternatives");
			builder.put(grammarAccess.getTopDescSystemAccess().getGroup(), "rule__TopDescSystem__Group__0");
			builder.put(grammarAccess.getInlineDescSystemAccess().getGroup(), "rule__InlineDescSystem__Group__0");
			builder.put(grammarAccess.getTopDescCommandAccess().getGroup(), "rule__TopDescCommand__Group__0");
			builder.put(grammarAccess.getInlineDescCommandAccess().getGroup(), "rule__InlineDescCommand__Group__0");
			builder.put(grammarAccess.getTopDescResourceAccess().getGroup(), "rule__TopDescResource__Group__0");
			builder.put(grammarAccess.getInlineDescResourceAccess().getGroup(), "rule__InlineDescResource__Group__0");
			builder.put(grammarAccess.getSingletonCpsAccess().getGroup(), "rule__SingletonCps__Group__0");
			builder.put(grammarAccess.getMultiCpsAccess().getGroup(), "rule__MultiCps__Group__0");
			builder.put(grammarAccess.getMultiCpsAccess().getGroup_4(), "rule__MultiCps__Group_4__0");
			builder.put(grammarAccess.getMultiCpsAccess().getGroup_4_2(), "rule__MultiCps__Group_4_2__0");
			builder.put(grammarAccess.getActuatorAccess().getGroup(), "rule__Actuator__Group__0");
			builder.put(grammarAccess.getActuatorAccess().getGroup_4(), "rule__Actuator__Group_4__0");
			builder.put(grammarAccess.getActuatorAccess().getGroup_4_2(), "rule__Actuator__Group_4_2__0");
			builder.put(grammarAccess.getSensorAccess().getGroup(), "rule__Sensor__Group__0");
			builder.put(grammarAccess.getSensorAccess().getGroup_4(), "rule__Sensor__Group_4__0");
			builder.put(grammarAccess.getSensorAccess().getGroup_4_2(), "rule__Sensor__Group_4_2__0");
			builder.put(grammarAccess.getTopDescSystemAccess().getDescriptionAssignment_1(), "rule__TopDescSystem__DescriptionAssignment_1");
			builder.put(grammarAccess.getTopDescSystemAccess().getNameAssignment_3(), "rule__TopDescSystem__NameAssignment_3");
			builder.put(grammarAccess.getTopDescSystemAccess().getCpsAssignment_5_0(), "rule__TopDescSystem__CpsAssignment_5_0");
			builder.put(grammarAccess.getTopDescSystemAccess().getCommandsAssignment_5_1(), "rule__TopDescSystem__CommandsAssignment_5_1");
			builder.put(grammarAccess.getInlineDescSystemAccess().getNameAssignment_2(), "rule__InlineDescSystem__NameAssignment_2");
			builder.put(grammarAccess.getInlineDescSystemAccess().getDescriptionAssignment_4(), "rule__InlineDescSystem__DescriptionAssignment_4");
			builder.put(grammarAccess.getInlineDescSystemAccess().getCpsAssignment_5_0(), "rule__InlineDescSystem__CpsAssignment_5_0");
			builder.put(grammarAccess.getInlineDescSystemAccess().getCommandsAssignment_5_1(), "rule__InlineDescSystem__CommandsAssignment_5_1");
			builder.put(grammarAccess.getTopDescCommandAccess().getDescriptionAssignment_1(), "rule__TopDescCommand__DescriptionAssignment_1");
			builder.put(grammarAccess.getTopDescCommandAccess().getNameAssignment_3(), "rule__TopDescCommand__NameAssignment_3");
			builder.put(grammarAccess.getInlineDescCommandAccess().getNameAssignment_2(), "rule__InlineDescCommand__NameAssignment_2");
			builder.put(grammarAccess.getInlineDescCommandAccess().getDescriptionAssignment_3(), "rule__InlineDescCommand__DescriptionAssignment_3");
			builder.put(grammarAccess.getTopDescResourceAccess().getDescriptionAssignment_1(), "rule__TopDescResource__DescriptionAssignment_1");
			builder.put(grammarAccess.getTopDescResourceAccess().getNameAssignment_3(), "rule__TopDescResource__NameAssignment_3");
			builder.put(grammarAccess.getInlineDescResourceAccess().getNameAssignment_2(), "rule__InlineDescResource__NameAssignment_2");
			builder.put(grammarAccess.getInlineDescResourceAccess().getDescriptionAssignment_3(), "rule__InlineDescResource__DescriptionAssignment_3");
			builder.put(grammarAccess.getSingletonCpsAccess().getDescriptionAssignment_1(), "rule__SingletonCps__DescriptionAssignment_1");
			builder.put(grammarAccess.getSingletonCpsAccess().getNameAssignment_3(), "rule__SingletonCps__NameAssignment_3");
			builder.put(grammarAccess.getSingletonCpsAccess().getCommandsAssignment_5_0(), "rule__SingletonCps__CommandsAssignment_5_0");
			builder.put(grammarAccess.getSingletonCpsAccess().getResourcesAssignment_5_1(), "rule__SingletonCps__ResourcesAssignment_5_1");
			builder.put(grammarAccess.getSingletonCpsAccess().getHardwareAssignment_5_2(), "rule__SingletonCps__HardwareAssignment_5_2");
			builder.put(grammarAccess.getMultiCpsAccess().getDescriptionAssignment_1(), "rule__MultiCps__DescriptionAssignment_1");
			builder.put(grammarAccess.getMultiCpsAccess().getNameAssignment_3(), "rule__MultiCps__NameAssignment_3");
			builder.put(grammarAccess.getMultiCpsAccess().getInstancesAssignment_4_1(), "rule__MultiCps__InstancesAssignment_4_1");
			builder.put(grammarAccess.getMultiCpsAccess().getInstancesAssignment_4_2_1(), "rule__MultiCps__InstancesAssignment_4_2_1");
			builder.put(grammarAccess.getMultiCpsAccess().getCommandsAssignment_6_0(), "rule__MultiCps__CommandsAssignment_6_0");
			builder.put(grammarAccess.getMultiCpsAccess().getResourcesAssignment_6_1(), "rule__MultiCps__ResourcesAssignment_6_1");
			builder.put(grammarAccess.getMultiCpsAccess().getHardwareAssignment_6_2(), "rule__MultiCps__HardwareAssignment_6_2");
			builder.put(grammarAccess.getActuatorAccess().getDescriptionAssignment_1(), "rule__Actuator__DescriptionAssignment_1");
			builder.put(grammarAccess.getActuatorAccess().getNameAssignment_3(), "rule__Actuator__NameAssignment_3");
			builder.put(grammarAccess.getActuatorAccess().getInstancesAssignment_4_1(), "rule__Actuator__InstancesAssignment_4_1");
			builder.put(grammarAccess.getActuatorAccess().getInstancesAssignment_4_2_1(), "rule__Actuator__InstancesAssignment_4_2_1");
			builder.put(grammarAccess.getActuatorAccess().getCommandsAssignment_6(), "rule__Actuator__CommandsAssignment_6");
			builder.put(grammarAccess.getSensorAccess().getDescriptionAssignment_1(), "rule__Sensor__DescriptionAssignment_1");
			builder.put(grammarAccess.getSensorAccess().getNameAssignment_3(), "rule__Sensor__NameAssignment_3");
			builder.put(grammarAccess.getSensorAccess().getInstancesAssignment_4_1(), "rule__Sensor__InstancesAssignment_4_1");
			builder.put(grammarAccess.getSensorAccess().getInstancesAssignment_4_2_1(), "rule__Sensor__InstancesAssignment_4_2_1");
			builder.put(grammarAccess.getSensorAccess().getResourcesAssignment_6(), "rule__Sensor__ResourcesAssignment_6");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private CpsamlGrammarAccess grammarAccess;

	@Override
	protected InternalCpsamlParser createParser() {
		InternalCpsamlParser result = new InternalCpsamlParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT" };
	}

	public CpsamlGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(CpsamlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
