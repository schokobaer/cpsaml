/*
 * generated by Xtext 2.22.0
 */
package at.ac.tuwien.big.cps.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class CpsamlGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class CpsSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.CpsSystem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTopDescSystemParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cInlineDescSystemParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//CpsSystem:
		//	TopDescSystem | InlineDescSystem;
		@Override public ParserRule getRule() { return rule; }
		
		//TopDescSystem | InlineDescSystem
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//TopDescSystem
		public RuleCall getTopDescSystemParserRuleCall_0() { return cTopDescSystemParserRuleCall_0; }
		
		//InlineDescSystem
		public RuleCall getInlineDescSystemParserRuleCall_1() { return cInlineDescSystemParserRuleCall_1; }
	}
	public class TopDescSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.TopDescSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCpsSystemAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cDescriptionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescriptionML_DESCRIPTIONTerminalRuleCall_1_0 = (RuleCall)cDescriptionAssignment_1.eContents().get(0);
		private final Keyword cCpsSystemKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameNameParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cCpsAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cCpsCpsParserRuleCall_5_0_0 = (RuleCall)cCpsAssignment_5_0.eContents().get(0);
		private final Assignment cCommandsAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final RuleCall cCommandsCommandParserRuleCall_5_1_0 = (RuleCall)cCommandsAssignment_5_1.eContents().get(0);
		
		//TopDescSystem CpsSystem:
		//	{CpsSystem} description=ML_DESCRIPTION
		//	'cps-system'
		//	name=Name
		//	':' (cps+=Cps | commands+=Command)*;
		@Override public ParserRule getRule() { return rule; }
		
		//{CpsSystem} description=ML_DESCRIPTION 'cps-system' name=Name ':' (cps+=Cps | commands+=Command)*
		public Group getGroup() { return cGroup; }
		
		//{CpsSystem}
		public Action getCpsSystemAction_0() { return cCpsSystemAction_0; }
		
		//description=ML_DESCRIPTION
		public Assignment getDescriptionAssignment_1() { return cDescriptionAssignment_1; }
		
		//ML_DESCRIPTION
		public RuleCall getDescriptionML_DESCRIPTIONTerminalRuleCall_1_0() { return cDescriptionML_DESCRIPTIONTerminalRuleCall_1_0; }
		
		//'cps-system'
		public Keyword getCpsSystemKeyword_2() { return cCpsSystemKeyword_2; }
		
		//name=Name
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_3_0() { return cNameNameParserRuleCall_3_0; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//(cps+=Cps | commands+=Command)*
		public Alternatives getAlternatives_5() { return cAlternatives_5; }
		
		//cps+=Cps
		public Assignment getCpsAssignment_5_0() { return cCpsAssignment_5_0; }
		
		//Cps
		public RuleCall getCpsCpsParserRuleCall_5_0_0() { return cCpsCpsParserRuleCall_5_0_0; }
		
		//commands+=Command
		public Assignment getCommandsAssignment_5_1() { return cCommandsAssignment_5_1; }
		
		//Command
		public RuleCall getCommandsCommandParserRuleCall_5_1_0() { return cCommandsCommandParserRuleCall_5_1_0; }
	}
	public class InlineDescSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.InlineDescSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCpsSystemAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCpsSystemKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDescriptionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDescriptionSL_DESCRIPTIONTerminalRuleCall_4_0 = (RuleCall)cDescriptionAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cCpsAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cCpsCpsParserRuleCall_5_0_0 = (RuleCall)cCpsAssignment_5_0.eContents().get(0);
		private final Assignment cCommandsAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final RuleCall cCommandsCommandParserRuleCall_5_1_0 = (RuleCall)cCommandsAssignment_5_1.eContents().get(0);
		
		//InlineDescSystem CpsSystem:
		//	{CpsSystem}
		//	'cps-system'
		//	name=Name
		//	':'
		//	description=SL_DESCRIPTION? (cps+=Cps | commands+=Command)*;
		@Override public ParserRule getRule() { return rule; }
		
		//{CpsSystem} 'cps-system' name=Name ':' description=SL_DESCRIPTION? (cps+=Cps | commands+=Command)*
		public Group getGroup() { return cGroup; }
		
		//{CpsSystem}
		public Action getCpsSystemAction_0() { return cCpsSystemAction_0; }
		
		//'cps-system'
		public Keyword getCpsSystemKeyword_1() { return cCpsSystemKeyword_1; }
		
		//name=Name
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0() { return cNameNameParserRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//description=SL_DESCRIPTION?
		public Assignment getDescriptionAssignment_4() { return cDescriptionAssignment_4; }
		
		//SL_DESCRIPTION
		public RuleCall getDescriptionSL_DESCRIPTIONTerminalRuleCall_4_0() { return cDescriptionSL_DESCRIPTIONTerminalRuleCall_4_0; }
		
		//(cps+=Cps | commands+=Command)*
		public Alternatives getAlternatives_5() { return cAlternatives_5; }
		
		//cps+=Cps
		public Assignment getCpsAssignment_5_0() { return cCpsAssignment_5_0; }
		
		//Cps
		public RuleCall getCpsCpsParserRuleCall_5_0_0() { return cCpsCpsParserRuleCall_5_0_0; }
		
		//commands+=Command
		public Assignment getCommandsAssignment_5_1() { return cCommandsAssignment_5_1; }
		
		//Command
		public RuleCall getCommandsCommandParserRuleCall_5_1_0() { return cCommandsCommandParserRuleCall_5_1_0; }
	}
	public class CommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.Command");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTopDescCommandParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cInlineDescCommandParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Command:
		//	TopDescCommand | InlineDescCommand;
		@Override public ParserRule getRule() { return rule; }
		
		//TopDescCommand | InlineDescCommand
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//TopDescCommand
		public RuleCall getTopDescCommandParserRuleCall_0() { return cTopDescCommandParserRuleCall_0; }
		
		//InlineDescCommand
		public RuleCall getInlineDescCommandParserRuleCall_1() { return cInlineDescCommandParserRuleCall_1; }
	}
	public class TopDescCommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.TopDescCommand");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCommandAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cDescriptionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescriptionML_DESCRIPTIONTerminalRuleCall_1_0 = (RuleCall)cDescriptionAssignment_1.eContents().get(0);
		private final Keyword cCommandKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameNameParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//TopDescCommand Command:
		//	{Command} description=ML_DESCRIPTION?
		//	'command'
		//	name=Name;
		@Override public ParserRule getRule() { return rule; }
		
		//{Command} description=ML_DESCRIPTION? 'command' name=Name
		public Group getGroup() { return cGroup; }
		
		//{Command}
		public Action getCommandAction_0() { return cCommandAction_0; }
		
		//description=ML_DESCRIPTION?
		public Assignment getDescriptionAssignment_1() { return cDescriptionAssignment_1; }
		
		//ML_DESCRIPTION
		public RuleCall getDescriptionML_DESCRIPTIONTerminalRuleCall_1_0() { return cDescriptionML_DESCRIPTIONTerminalRuleCall_1_0; }
		
		//'command'
		public Keyword getCommandKeyword_2() { return cCommandKeyword_2; }
		
		//name=Name
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_3_0() { return cNameNameParserRuleCall_3_0; }
	}
	public class InlineDescCommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.InlineDescCommand");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCommandAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCommandKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cDescriptionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescriptionSL_DESCRIPTIONTerminalRuleCall_3_0 = (RuleCall)cDescriptionAssignment_3.eContents().get(0);
		
		//InlineDescCommand Command:
		//	{Command}
		//	'command'
		//	name=Name
		//	description=SL_DESCRIPTION;
		@Override public ParserRule getRule() { return rule; }
		
		//{Command} 'command' name=Name description=SL_DESCRIPTION
		public Group getGroup() { return cGroup; }
		
		//{Command}
		public Action getCommandAction_0() { return cCommandAction_0; }
		
		//'command'
		public Keyword getCommandKeyword_1() { return cCommandKeyword_1; }
		
		//name=Name
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0() { return cNameNameParserRuleCall_2_0; }
		
		//description=SL_DESCRIPTION
		public Assignment getDescriptionAssignment_3() { return cDescriptionAssignment_3; }
		
		//SL_DESCRIPTION
		public RuleCall getDescriptionSL_DESCRIPTIONTerminalRuleCall_3_0() { return cDescriptionSL_DESCRIPTIONTerminalRuleCall_3_0; }
	}
	public class ResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.Resource");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTopDescResourceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cInlineDescResourceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Resource:
		//	TopDescResource | InlineDescResource;
		@Override public ParserRule getRule() { return rule; }
		
		//TopDescResource | InlineDescResource
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//TopDescResource
		public RuleCall getTopDescResourceParserRuleCall_0() { return cTopDescResourceParserRuleCall_0; }
		
		//InlineDescResource
		public RuleCall getInlineDescResourceParserRuleCall_1() { return cInlineDescResourceParserRuleCall_1; }
	}
	public class TopDescResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.TopDescResource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cResourceAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cDescriptionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescriptionML_DESCRIPTIONTerminalRuleCall_1_0 = (RuleCall)cDescriptionAssignment_1.eContents().get(0);
		private final Keyword cProducesKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameNameParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//TopDescResource Resource:
		//	{Resource} description=ML_DESCRIPTION
		//	'produces'
		//	name=Name;
		@Override public ParserRule getRule() { return rule; }
		
		//{Resource} description=ML_DESCRIPTION 'produces' name=Name
		public Group getGroup() { return cGroup; }
		
		//{Resource}
		public Action getResourceAction_0() { return cResourceAction_0; }
		
		//description=ML_DESCRIPTION
		public Assignment getDescriptionAssignment_1() { return cDescriptionAssignment_1; }
		
		//ML_DESCRIPTION
		public RuleCall getDescriptionML_DESCRIPTIONTerminalRuleCall_1_0() { return cDescriptionML_DESCRIPTIONTerminalRuleCall_1_0; }
		
		//'produces'
		public Keyword getProducesKeyword_2() { return cProducesKeyword_2; }
		
		//name=Name
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_3_0() { return cNameNameParserRuleCall_3_0; }
	}
	public class InlineDescResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.InlineDescResource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cResourceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cProducesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cDescriptionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescriptionSL_DESCRIPTIONTerminalRuleCall_3_0 = (RuleCall)cDescriptionAssignment_3.eContents().get(0);
		
		//InlineDescResource Resource:
		//	{Resource}
		//	'produces'
		//	name=Name
		//	description=SL_DESCRIPTION?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Resource} 'produces' name=Name description=SL_DESCRIPTION?
		public Group getGroup() { return cGroup; }
		
		//{Resource}
		public Action getResourceAction_0() { return cResourceAction_0; }
		
		//'produces'
		public Keyword getProducesKeyword_1() { return cProducesKeyword_1; }
		
		//name=Name
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0() { return cNameNameParserRuleCall_2_0; }
		
		//description=SL_DESCRIPTION?
		public Assignment getDescriptionAssignment_3() { return cDescriptionAssignment_3; }
		
		//SL_DESCRIPTION
		public RuleCall getDescriptionSL_DESCRIPTIONTerminalRuleCall_3_0() { return cDescriptionSL_DESCRIPTIONTerminalRuleCall_3_0; }
	}
	public class CpsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.Cps");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSingletonCpsParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMultiCpsParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Cps:
		//	SingletonCps | MultiCps;
		@Override public ParserRule getRule() { return rule; }
		
		//SingletonCps | MultiCps
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SingletonCps
		public RuleCall getSingletonCpsParserRuleCall_0() { return cSingletonCpsParserRuleCall_0; }
		
		//MultiCps
		public RuleCall getMultiCpsParserRuleCall_1() { return cMultiCpsParserRuleCall_1; }
	}
	public class SingletonCpsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.SingletonCps");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSingletonCpsAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cDescriptionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescriptionML_DESCRIPTIONTerminalRuleCall_1_0 = (RuleCall)cDescriptionAssignment_1.eContents().get(0);
		private final Keyword cCpsSingletonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameNameParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cCommandsAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cCommandsCommandParserRuleCall_5_0_0 = (RuleCall)cCommandsAssignment_5_0.eContents().get(0);
		private final Assignment cResourcesAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final RuleCall cResourcesResourceParserRuleCall_5_1_0 = (RuleCall)cResourcesAssignment_5_1.eContents().get(0);
		private final Assignment cHardwareAssignment_5_2 = (Assignment)cAlternatives_5.eContents().get(2);
		private final RuleCall cHardwareHardwareParserRuleCall_5_2_0 = (RuleCall)cHardwareAssignment_5_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//SingletonCps:
		//	{SingletonCps} description=ML_DESCRIPTION?
		//	'cps-singleton'
		//	name=Name
		//	'{' (commands+=Command | resources+=Resource | hardware+=Hardware)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{SingletonCps} description=ML_DESCRIPTION? 'cps-singleton' name=Name '{' (commands+=Command | resources+=Resource |
		//hardware+=Hardware)* '}'
		public Group getGroup() { return cGroup; }
		
		//{SingletonCps}
		public Action getSingletonCpsAction_0() { return cSingletonCpsAction_0; }
		
		//description=ML_DESCRIPTION?
		public Assignment getDescriptionAssignment_1() { return cDescriptionAssignment_1; }
		
		//ML_DESCRIPTION
		public RuleCall getDescriptionML_DESCRIPTIONTerminalRuleCall_1_0() { return cDescriptionML_DESCRIPTIONTerminalRuleCall_1_0; }
		
		//'cps-singleton'
		public Keyword getCpsSingletonKeyword_2() { return cCpsSingletonKeyword_2; }
		
		//name=Name
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_3_0() { return cNameNameParserRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//(commands+=Command | resources+=Resource | hardware+=Hardware)*
		public Alternatives getAlternatives_5() { return cAlternatives_5; }
		
		//commands+=Command
		public Assignment getCommandsAssignment_5_0() { return cCommandsAssignment_5_0; }
		
		//Command
		public RuleCall getCommandsCommandParserRuleCall_5_0_0() { return cCommandsCommandParserRuleCall_5_0_0; }
		
		//resources+=Resource
		public Assignment getResourcesAssignment_5_1() { return cResourcesAssignment_5_1; }
		
		//Resource
		public RuleCall getResourcesResourceParserRuleCall_5_1_0() { return cResourcesResourceParserRuleCall_5_1_0; }
		
		//hardware+=Hardware
		public Assignment getHardwareAssignment_5_2() { return cHardwareAssignment_5_2; }
		
		//Hardware
		public RuleCall getHardwareHardwareParserRuleCall_5_2_0() { return cHardwareHardwareParserRuleCall_5_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class MultiCpsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.MultiCps");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMultiCpsAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cDescriptionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescriptionML_DESCRIPTIONTerminalRuleCall_1_0 = (RuleCall)cDescriptionAssignment_1.eContents().get(0);
		private final Keyword cCpsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameNameParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cInstancesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cInstancesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cInstancesNameParserRuleCall_4_1_0 = (RuleCall)cInstancesAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cInstancesAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cInstancesNameParserRuleCall_4_2_1_0 = (RuleCall)cInstancesAssignment_4_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Assignment cCommandsAssignment_6_0 = (Assignment)cAlternatives_6.eContents().get(0);
		private final RuleCall cCommandsCommandParserRuleCall_6_0_0 = (RuleCall)cCommandsAssignment_6_0.eContents().get(0);
		private final Assignment cResourcesAssignment_6_1 = (Assignment)cAlternatives_6.eContents().get(1);
		private final RuleCall cResourcesResourceParserRuleCall_6_1_0 = (RuleCall)cResourcesAssignment_6_1.eContents().get(0);
		private final Assignment cHardwareAssignment_6_2 = (Assignment)cAlternatives_6.eContents().get(2);
		private final RuleCall cHardwareHardwareParserRuleCall_6_2_0 = (RuleCall)cHardwareAssignment_6_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//MultiCps:
		//	{MultiCps} description=ML_DESCRIPTION?
		//	'cps'
		//	name=Name ('instances' instances+=Name (',' instances+=Name)*)?
		//	'{' (commands+=Command | resources+=Resource | hardware+=Hardware)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{MultiCps} description=ML_DESCRIPTION? 'cps' name=Name ('instances' instances+=Name (',' instances+=Name)*)? '{'
		//(commands+=Command | resources+=Resource | hardware+=Hardware)* '}'
		public Group getGroup() { return cGroup; }
		
		//{MultiCps}
		public Action getMultiCpsAction_0() { return cMultiCpsAction_0; }
		
		//description=ML_DESCRIPTION?
		public Assignment getDescriptionAssignment_1() { return cDescriptionAssignment_1; }
		
		//ML_DESCRIPTION
		public RuleCall getDescriptionML_DESCRIPTIONTerminalRuleCall_1_0() { return cDescriptionML_DESCRIPTIONTerminalRuleCall_1_0; }
		
		//'cps'
		public Keyword getCpsKeyword_2() { return cCpsKeyword_2; }
		
		//name=Name
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_3_0() { return cNameNameParserRuleCall_3_0; }
		
		//('instances' instances+=Name (',' instances+=Name)*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'instances'
		public Keyword getInstancesKeyword_4_0() { return cInstancesKeyword_4_0; }
		
		//instances+=Name
		public Assignment getInstancesAssignment_4_1() { return cInstancesAssignment_4_1; }
		
		//Name
		public RuleCall getInstancesNameParserRuleCall_4_1_0() { return cInstancesNameParserRuleCall_4_1_0; }
		
		//(',' instances+=Name)*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//','
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//instances+=Name
		public Assignment getInstancesAssignment_4_2_1() { return cInstancesAssignment_4_2_1; }
		
		//Name
		public RuleCall getInstancesNameParserRuleCall_4_2_1_0() { return cInstancesNameParserRuleCall_4_2_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//(commands+=Command | resources+=Resource | hardware+=Hardware)*
		public Alternatives getAlternatives_6() { return cAlternatives_6; }
		
		//commands+=Command
		public Assignment getCommandsAssignment_6_0() { return cCommandsAssignment_6_0; }
		
		//Command
		public RuleCall getCommandsCommandParserRuleCall_6_0_0() { return cCommandsCommandParserRuleCall_6_0_0; }
		
		//resources+=Resource
		public Assignment getResourcesAssignment_6_1() { return cResourcesAssignment_6_1; }
		
		//Resource
		public RuleCall getResourcesResourceParserRuleCall_6_1_0() { return cResourcesResourceParserRuleCall_6_1_0; }
		
		//hardware+=Hardware
		public Assignment getHardwareAssignment_6_2() { return cHardwareAssignment_6_2; }
		
		//Hardware
		public RuleCall getHardwareHardwareParserRuleCall_6_2_0() { return cHardwareHardwareParserRuleCall_6_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class HardwareElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.Hardware");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActuatorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSensorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Hardware:
		//	Actuator | Sensor;
		@Override public ParserRule getRule() { return rule; }
		
		//Actuator | Sensor
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Actuator
		public RuleCall getActuatorParserRuleCall_0() { return cActuatorParserRuleCall_0; }
		
		//Sensor
		public RuleCall getSensorParserRuleCall_1() { return cSensorParserRuleCall_1; }
	}
	public class ActuatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.Actuator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cActuatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cDescriptionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescriptionML_DESCRIPTIONTerminalRuleCall_1_0 = (RuleCall)cDescriptionAssignment_1.eContents().get(0);
		private final Keyword cActuatorKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameNameParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cInstancesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cInstancesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cInstancesNameParserRuleCall_4_1_0 = (RuleCall)cInstancesAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cInstancesAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cInstancesNameParserRuleCall_4_2_1_0 = (RuleCall)cInstancesAssignment_4_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cCommandsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cCommandsCommandParserRuleCall_6_0 = (RuleCall)cCommandsAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Actuator:
		//	{Actuator} description=ML_DESCRIPTION?
		//	'actuator'
		//	name=Name ('instances' instances+=Name (',' instances+=Name)*)?
		//	'{'
		//	commands+=Command*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Actuator} description=ML_DESCRIPTION? 'actuator' name=Name ('instances' instances+=Name (',' instances+=Name)*)? '{'
		//commands+=Command* '}'
		public Group getGroup() { return cGroup; }
		
		//{Actuator}
		public Action getActuatorAction_0() { return cActuatorAction_0; }
		
		//description=ML_DESCRIPTION?
		public Assignment getDescriptionAssignment_1() { return cDescriptionAssignment_1; }
		
		//ML_DESCRIPTION
		public RuleCall getDescriptionML_DESCRIPTIONTerminalRuleCall_1_0() { return cDescriptionML_DESCRIPTIONTerminalRuleCall_1_0; }
		
		//'actuator'
		public Keyword getActuatorKeyword_2() { return cActuatorKeyword_2; }
		
		//name=Name
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_3_0() { return cNameNameParserRuleCall_3_0; }
		
		//('instances' instances+=Name (',' instances+=Name)*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'instances'
		public Keyword getInstancesKeyword_4_0() { return cInstancesKeyword_4_0; }
		
		//instances+=Name
		public Assignment getInstancesAssignment_4_1() { return cInstancesAssignment_4_1; }
		
		//Name
		public RuleCall getInstancesNameParserRuleCall_4_1_0() { return cInstancesNameParserRuleCall_4_1_0; }
		
		//(',' instances+=Name)*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//','
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//instances+=Name
		public Assignment getInstancesAssignment_4_2_1() { return cInstancesAssignment_4_2_1; }
		
		//Name
		public RuleCall getInstancesNameParserRuleCall_4_2_1_0() { return cInstancesNameParserRuleCall_4_2_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//commands+=Command*
		public Assignment getCommandsAssignment_6() { return cCommandsAssignment_6; }
		
		//Command
		public RuleCall getCommandsCommandParserRuleCall_6_0() { return cCommandsCommandParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class SensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.Sensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cDescriptionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescriptionML_DESCRIPTIONTerminalRuleCall_1_0 = (RuleCall)cDescriptionAssignment_1.eContents().get(0);
		private final Keyword cSensorKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameNameParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cInstancesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cInstancesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cInstancesNameParserRuleCall_4_1_0 = (RuleCall)cInstancesAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cInstancesAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cInstancesNameParserRuleCall_4_2_1_0 = (RuleCall)cInstancesAssignment_4_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cResourcesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cResourcesResourceParserRuleCall_6_0 = (RuleCall)cResourcesAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Sensor:
		//	{Sensor} description=ML_DESCRIPTION?
		//	'sensor'
		//	name=Name ('instances' instances+=Name (',' instances+=Name)*)?
		//	'{'
		//	resources+=Resource*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Sensor} description=ML_DESCRIPTION? 'sensor' name=Name ('instances' instances+=Name (',' instances+=Name)*)? '{'
		//resources+=Resource* '}'
		public Group getGroup() { return cGroup; }
		
		//{Sensor}
		public Action getSensorAction_0() { return cSensorAction_0; }
		
		//description=ML_DESCRIPTION?
		public Assignment getDescriptionAssignment_1() { return cDescriptionAssignment_1; }
		
		//ML_DESCRIPTION
		public RuleCall getDescriptionML_DESCRIPTIONTerminalRuleCall_1_0() { return cDescriptionML_DESCRIPTIONTerminalRuleCall_1_0; }
		
		//'sensor'
		public Keyword getSensorKeyword_2() { return cSensorKeyword_2; }
		
		//name=Name
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_3_0() { return cNameNameParserRuleCall_3_0; }
		
		//('instances' instances+=Name (',' instances+=Name)*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'instances'
		public Keyword getInstancesKeyword_4_0() { return cInstancesKeyword_4_0; }
		
		//instances+=Name
		public Assignment getInstancesAssignment_4_1() { return cInstancesAssignment_4_1; }
		
		//Name
		public RuleCall getInstancesNameParserRuleCall_4_1_0() { return cInstancesNameParserRuleCall_4_1_0; }
		
		//(',' instances+=Name)*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//','
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//instances+=Name
		public Assignment getInstancesAssignment_4_2_1() { return cInstancesAssignment_4_2_1; }
		
		//Name
		public RuleCall getInstancesNameParserRuleCall_4_2_1_0() { return cInstancesNameParserRuleCall_4_2_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//resources+=Resource*
		public Assignment getResourcesAssignment_6() { return cResourcesAssignment_6; }
		
		//Resource
		public RuleCall getResourcesResourceParserRuleCall_6_0() { return cResourcesResourceParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class NameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.Name");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Name:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	
	
	private final CpsSystemElements pCpsSystem;
	private final TopDescSystemElements pTopDescSystem;
	private final InlineDescSystemElements pInlineDescSystem;
	private final CommandElements pCommand;
	private final TopDescCommandElements pTopDescCommand;
	private final InlineDescCommandElements pInlineDescCommand;
	private final ResourceElements pResource;
	private final TopDescResourceElements pTopDescResource;
	private final InlineDescResourceElements pInlineDescResource;
	private final CpsElements pCps;
	private final SingletonCpsElements pSingletonCps;
	private final MultiCpsElements pMultiCps;
	private final HardwareElements pHardware;
	private final ActuatorElements pActuator;
	private final SensorElements pSensor;
	private final NameElements pName;
	private final TerminalRule tID;
	private final TerminalRule tSTRING;
	private final TerminalRule tML_COMMENT;
	private final TerminalRule tSL_COMMENT;
	private final TerminalRule tML_DESCRIPTION;
	private final TerminalRule tSL_DESCRIPTION;
	private final TerminalRule tWS;
	private final TerminalRule tANY_OTHER;
	
	private final Grammar grammar;

	@Inject
	public CpsamlGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pCpsSystem = new CpsSystemElements();
		this.pTopDescSystem = new TopDescSystemElements();
		this.pInlineDescSystem = new InlineDescSystemElements();
		this.pCommand = new CommandElements();
		this.pTopDescCommand = new TopDescCommandElements();
		this.pInlineDescCommand = new InlineDescCommandElements();
		this.pResource = new ResourceElements();
		this.pTopDescResource = new TopDescResourceElements();
		this.pInlineDescResource = new InlineDescResourceElements();
		this.pCps = new CpsElements();
		this.pSingletonCps = new SingletonCpsElements();
		this.pMultiCps = new MultiCpsElements();
		this.pHardware = new HardwareElements();
		this.pActuator = new ActuatorElements();
		this.pSensor = new SensorElements();
		this.pName = new NameElements();
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.ID");
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.STRING");
		this.tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.ML_COMMENT");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.SL_COMMENT");
		this.tML_DESCRIPTION = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.ML_DESCRIPTION");
		this.tSL_DESCRIPTION = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.SL_DESCRIPTION");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.WS");
		this.tANY_OTHER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "at.ac.tuwien.big.cps.Cpsaml.ANY_OTHER");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("at.ac.tuwien.big.cps.Cpsaml".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//CpsSystem:
	//	TopDescSystem | InlineDescSystem;
	public CpsSystemElements getCpsSystemAccess() {
		return pCpsSystem;
	}
	
	public ParserRule getCpsSystemRule() {
		return getCpsSystemAccess().getRule();
	}
	
	//TopDescSystem CpsSystem:
	//	{CpsSystem} description=ML_DESCRIPTION
	//	'cps-system'
	//	name=Name
	//	':' (cps+=Cps | commands+=Command)*;
	public TopDescSystemElements getTopDescSystemAccess() {
		return pTopDescSystem;
	}
	
	public ParserRule getTopDescSystemRule() {
		return getTopDescSystemAccess().getRule();
	}
	
	//InlineDescSystem CpsSystem:
	//	{CpsSystem}
	//	'cps-system'
	//	name=Name
	//	':'
	//	description=SL_DESCRIPTION? (cps+=Cps | commands+=Command)*;
	public InlineDescSystemElements getInlineDescSystemAccess() {
		return pInlineDescSystem;
	}
	
	public ParserRule getInlineDescSystemRule() {
		return getInlineDescSystemAccess().getRule();
	}
	
	//Command:
	//	TopDescCommand | InlineDescCommand;
	public CommandElements getCommandAccess() {
		return pCommand;
	}
	
	public ParserRule getCommandRule() {
		return getCommandAccess().getRule();
	}
	
	//TopDescCommand Command:
	//	{Command} description=ML_DESCRIPTION?
	//	'command'
	//	name=Name;
	public TopDescCommandElements getTopDescCommandAccess() {
		return pTopDescCommand;
	}
	
	public ParserRule getTopDescCommandRule() {
		return getTopDescCommandAccess().getRule();
	}
	
	//InlineDescCommand Command:
	//	{Command}
	//	'command'
	//	name=Name
	//	description=SL_DESCRIPTION;
	public InlineDescCommandElements getInlineDescCommandAccess() {
		return pInlineDescCommand;
	}
	
	public ParserRule getInlineDescCommandRule() {
		return getInlineDescCommandAccess().getRule();
	}
	
	//Resource:
	//	TopDescResource | InlineDescResource;
	public ResourceElements getResourceAccess() {
		return pResource;
	}
	
	public ParserRule getResourceRule() {
		return getResourceAccess().getRule();
	}
	
	//TopDescResource Resource:
	//	{Resource} description=ML_DESCRIPTION
	//	'produces'
	//	name=Name;
	public TopDescResourceElements getTopDescResourceAccess() {
		return pTopDescResource;
	}
	
	public ParserRule getTopDescResourceRule() {
		return getTopDescResourceAccess().getRule();
	}
	
	//InlineDescResource Resource:
	//	{Resource}
	//	'produces'
	//	name=Name
	//	description=SL_DESCRIPTION?;
	public InlineDescResourceElements getInlineDescResourceAccess() {
		return pInlineDescResource;
	}
	
	public ParserRule getInlineDescResourceRule() {
		return getInlineDescResourceAccess().getRule();
	}
	
	//Cps:
	//	SingletonCps | MultiCps;
	public CpsElements getCpsAccess() {
		return pCps;
	}
	
	public ParserRule getCpsRule() {
		return getCpsAccess().getRule();
	}
	
	//SingletonCps:
	//	{SingletonCps} description=ML_DESCRIPTION?
	//	'cps-singleton'
	//	name=Name
	//	'{' (commands+=Command | resources+=Resource | hardware+=Hardware)*
	//	'}';
	public SingletonCpsElements getSingletonCpsAccess() {
		return pSingletonCps;
	}
	
	public ParserRule getSingletonCpsRule() {
		return getSingletonCpsAccess().getRule();
	}
	
	//MultiCps:
	//	{MultiCps} description=ML_DESCRIPTION?
	//	'cps'
	//	name=Name ('instances' instances+=Name (',' instances+=Name)*)?
	//	'{' (commands+=Command | resources+=Resource | hardware+=Hardware)*
	//	'}';
	public MultiCpsElements getMultiCpsAccess() {
		return pMultiCps;
	}
	
	public ParserRule getMultiCpsRule() {
		return getMultiCpsAccess().getRule();
	}
	
	//Hardware:
	//	Actuator | Sensor;
	public HardwareElements getHardwareAccess() {
		return pHardware;
	}
	
	public ParserRule getHardwareRule() {
		return getHardwareAccess().getRule();
	}
	
	//Actuator:
	//	{Actuator} description=ML_DESCRIPTION?
	//	'actuator'
	//	name=Name ('instances' instances+=Name (',' instances+=Name)*)?
	//	'{'
	//	commands+=Command*
	//	'}';
	public ActuatorElements getActuatorAccess() {
		return pActuator;
	}
	
	public ParserRule getActuatorRule() {
		return getActuatorAccess().getRule();
	}
	
	//Sensor:
	//	{Sensor} description=ML_DESCRIPTION?
	//	'sensor'
	//	name=Name ('instances' instances+=Name (',' instances+=Name)*)?
	//	'{'
	//	resources+=Resource*
	//	'}';
	public SensorElements getSensorAccess() {
		return pSensor;
	}
	
	public ParserRule getSensorRule() {
		return getSensorAccess().getRule();
	}
	
	//Name:
	//	STRING | ID;
	public NameElements getNameAccess() {
		return pName;
	}
	
	public ParserRule getNameRule() {
		return getNameAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//terminal STRING:
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	}
	
	//terminal ML_COMMENT:
	//	'***'->'***';
	public TerminalRule getML_COMMENTRule() {
		return tML_COMMENT;
	}
	
	//terminal SL_COMMENT:
	//	'#' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	}
	
	//terminal ML_DESCRIPTION:
	//	'/*'->'*/';
	public TerminalRule getML_DESCRIPTIONRule() {
		return tML_DESCRIPTION;
	}
	
	//terminal SL_DESCRIPTION:
	//	'--' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_DESCRIPTIONRule() {
		return tSL_DESCRIPTION;
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return tWS;
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return tANY_OTHER;
	}
}
